/**
 * Generated by @kubb/plugin-zod - Do not edit by hand
 * @see https://github.com/kubb-labs/kubb/tree/main/packages/plugin-zod
 */

import { applicationSchema } from './applicationSchema.ts'
import { errorSchema } from './errorSchema.ts'
import { notAuthorizedErrorSchema } from './notAuthorizedErrorSchema.ts'
import { notFoundErrorSchema } from './notFoundErrorSchema.ts'
import { z } from 'zod'

export const applicationsGetPathParamsSchema = z.object({
  id: z.string(),
})

export type ApplicationsGetPathParamsSchema = z.infer<typeof applicationsGetPathParamsSchema>

/**
 * @description The request has succeeded.
 */
export const applicationsGet200Schema = z.lazy(() => applicationSchema)

export type ApplicationsGet200Schema = z.infer<typeof applicationsGet200Schema>

/**
 * @description Access is unauthorized.
 */
export const applicationsGet401Schema = z.lazy(() => notAuthorizedErrorSchema)

export type ApplicationsGet401Schema = z.infer<typeof applicationsGet401Schema>

/**
 * @description The server cannot find the requested resource.
 */
export const applicationsGet404Schema = z.lazy(() => notFoundErrorSchema)

export type ApplicationsGet404Schema = z.infer<typeof applicationsGet404Schema>

/**
 * @description Server error
 */
export const applicationsGet500Schema = z.lazy(() => errorSchema)

export type ApplicationsGet500Schema = z.infer<typeof applicationsGet500Schema>

export const applicationsGetQueryResponseSchema = z.lazy(() => applicationsGet200Schema)

export type ApplicationsGetQueryResponseSchema = z.infer<typeof applicationsGetQueryResponseSchema>