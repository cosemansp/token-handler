/**
 * Generated by @kubb/plugin-zod - Do not edit by hand
 * @see https://github.com/kubb-labs/kubb/tree/main/packages/plugin-zod
 */

import { clientSecretSchema } from './clientSecretSchema.ts'
import { errorSchema } from './errorSchema.ts'
import { notAuthorizedErrorSchema } from './notAuthorizedErrorSchema.ts'
import { z } from 'zod'

export const secretsListPathParamsSchema = z.object({
  id: z.string(),
})

export type SecretsListPathParamsSchema = z.infer<typeof secretsListPathParamsSchema>

/**
 * @description The request has succeeded.
 */
export const secretsList200Schema = z.array(z.lazy(() => clientSecretSchema))

export type SecretsList200Schema = z.infer<typeof secretsList200Schema>

/**
 * @description Access is unauthorized.
 */
export const secretsList401Schema = z.lazy(() => notAuthorizedErrorSchema)

export type SecretsList401Schema = z.infer<typeof secretsList401Schema>

/**
 * @description Server error
 */
export const secretsList500Schema = z.lazy(() => errorSchema)

export type SecretsList500Schema = z.infer<typeof secretsList500Schema>

export const secretsListQueryResponseSchema = z.lazy(() => secretsList200Schema)

export type SecretsListQueryResponseSchema = z.infer<typeof secretsListQueryResponseSchema>