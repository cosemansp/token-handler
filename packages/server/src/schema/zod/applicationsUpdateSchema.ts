/**
 * Generated by @kubb/plugin-zod - Do not edit by hand
 * @see https://github.com/kubb-labs/kubb/tree/main/packages/plugin-zod
 */

import { applicationCreateOrUpdateSchema } from './applicationCreateOrUpdateSchema.ts'
import { applicationSchema } from './applicationSchema.ts'
import { badRequestErrorSchema } from './badRequestErrorSchema.ts'
import { errorSchema } from './errorSchema.ts'
import { notAuthorizedErrorSchema } from './notAuthorizedErrorSchema.ts'
import { notFoundErrorSchema } from './notFoundErrorSchema.ts'
import { z } from 'zod'

export const applicationsUpdatePathParamsSchema = z.object({
  id: z.string(),
})

export type ApplicationsUpdatePathParamsSchema = z.infer<typeof applicationsUpdatePathParamsSchema>

/**
 * @description The request has succeeded.
 */
export const applicationsUpdate200Schema = z.lazy(() => applicationSchema)

export type ApplicationsUpdate200Schema = z.infer<typeof applicationsUpdate200Schema>

/**
 * @description The server could not understand the request due to invalid syntax.
 */
export const applicationsUpdate400Schema = z.lazy(() => badRequestErrorSchema)

export type ApplicationsUpdate400Schema = z.infer<typeof applicationsUpdate400Schema>

/**
 * @description Access is unauthorized.
 */
export const applicationsUpdate401Schema = z.lazy(() => notAuthorizedErrorSchema)

export type ApplicationsUpdate401Schema = z.infer<typeof applicationsUpdate401Schema>

/**
 * @description The server cannot find the requested resource.
 */
export const applicationsUpdate404Schema = z.lazy(() => notFoundErrorSchema)

export type ApplicationsUpdate404Schema = z.infer<typeof applicationsUpdate404Schema>

/**
 * @description Server error
 */
export const applicationsUpdate500Schema = z.lazy(() => errorSchema)

export type ApplicationsUpdate500Schema = z.infer<typeof applicationsUpdate500Schema>

export const applicationsUpdateMutationRequestSchema = z.lazy(() => applicationCreateOrUpdateSchema)

export type ApplicationsUpdateMutationRequestSchema = z.infer<typeof applicationsUpdateMutationRequestSchema>

export const applicationsUpdateMutationResponseSchema = z.lazy(() => applicationsUpdate200Schema)

export type ApplicationsUpdateMutationResponseSchema = z.infer<typeof applicationsUpdateMutationResponseSchema>