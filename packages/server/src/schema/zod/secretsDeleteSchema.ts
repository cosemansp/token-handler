/**
 * Generated by @kubb/plugin-zod - Do not edit by hand
 * @see https://github.com/kubb-labs/kubb/tree/main/packages/plugin-zod
 */

import { clientSecretSchema } from './clientSecretSchema.ts'
import { errorSchema } from './errorSchema.ts'
import { notAuthorizedErrorSchema } from './notAuthorizedErrorSchema.ts'
import { notFoundErrorSchema } from './notFoundErrorSchema.ts'
import { z } from 'zod'

export const secretsDeletePathParamsSchema = z.object({
  id: z.string(),
  secretId: z.string(),
})

export type SecretsDeletePathParamsSchema = z.infer<typeof secretsDeletePathParamsSchema>

/**
 * @description The request has succeeded.
 */
export const secretsDelete200Schema = z.lazy(() => clientSecretSchema)

export type SecretsDelete200Schema = z.infer<typeof secretsDelete200Schema>

/**
 * @description Access is unauthorized.
 */
export const secretsDelete401Schema = z.lazy(() => notAuthorizedErrorSchema)

export type SecretsDelete401Schema = z.infer<typeof secretsDelete401Schema>

/**
 * @description The server cannot find the requested resource.
 */
export const secretsDelete404Schema = z.lazy(() => notFoundErrorSchema)

export type SecretsDelete404Schema = z.infer<typeof secretsDelete404Schema>

/**
 * @description Server error
 */
export const secretsDelete500Schema = z.lazy(() => errorSchema)

export type SecretsDelete500Schema = z.infer<typeof secretsDelete500Schema>

export const secretsDeleteMutationResponseSchema = z.lazy(() => secretsDelete200Schema)

export type SecretsDeleteMutationResponseSchema = z.infer<typeof secretsDeleteMutationResponseSchema>