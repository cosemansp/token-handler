/**
 * Generated by @kubb/plugin-zod - Do not edit by hand
 * @see https://github.com/kubb-labs/kubb/tree/main/packages/plugin-zod
 */

import { applicationSchema } from './applicationSchema.ts'
import { errorSchema } from './errorSchema.ts'
import { notAuthorizedErrorSchema } from './notAuthorizedErrorSchema.ts'
import { notFoundErrorSchema } from './notFoundErrorSchema.ts'
import { z } from 'zod'

export const applicationsDeletePathParamsSchema = z.object({
  id: z.string(),
})

export type ApplicationsDeletePathParamsSchema = z.infer<typeof applicationsDeletePathParamsSchema>

/**
 * @description The request has succeeded.
 */
export const applicationsDelete200Schema = z.lazy(() => applicationSchema)

export type ApplicationsDelete200Schema = z.infer<typeof applicationsDelete200Schema>

/**
 * @description Access is unauthorized.
 */
export const applicationsDelete401Schema = z.lazy(() => notAuthorizedErrorSchema)

export type ApplicationsDelete401Schema = z.infer<typeof applicationsDelete401Schema>

/**
 * @description The server cannot find the requested resource.
 */
export const applicationsDelete404Schema = z.lazy(() => notFoundErrorSchema)

export type ApplicationsDelete404Schema = z.infer<typeof applicationsDelete404Schema>

/**
 * @description Server error
 */
export const applicationsDelete500Schema = z.lazy(() => errorSchema)

export type ApplicationsDelete500Schema = z.infer<typeof applicationsDelete500Schema>

export const applicationsDeleteMutationResponseSchema = z.lazy(() => applicationsDelete200Schema)

export type ApplicationsDeleteMutationResponseSchema = z.infer<typeof applicationsDeleteMutationResponseSchema>